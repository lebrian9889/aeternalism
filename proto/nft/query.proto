syntax = "proto3";
package lebrian9889.aeternalism.nft;

import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "nft/nft.proto";
// this line is used by starport scaffolding # 1
import "gogoproto/gogo.proto";

option go_package = "github.com/lebrian9889/aeternalism/x/nft/types";

// Query defines the gRPC querier service.
service Query {
    // Queries a nft by index.
	rpc Nft(QueryGetNftRequest) returns (QueryGetNftResponse) {
		option (google.api.http).get = "/lebrian9889/aeternalism/nft/nft/{index}";
	}

	// Queries a list of nft items.
	rpc NftAll(QueryAllNftRequest) returns (QueryAllNftResponse) {
		option (google.api.http).get = "/lebrian9889/aeternalism/nft/nft";
	}

// this line is used by starport scaffolding # 2
}

message QueryGetNftRequest {
	  string index = 1;

}

message QueryGetNftResponse {
	Nft nft = 1 [(gogoproto.nullable) = false];
}

message QueryAllNftRequest {
	cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllNftResponse {
	repeated Nft nft = 1 [(gogoproto.nullable) = false];
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

// this line is used by starport scaffolding # 3
